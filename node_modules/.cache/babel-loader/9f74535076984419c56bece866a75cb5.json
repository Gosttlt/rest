{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/rest/src/component/common/FormControl.jsx\";\nimport React from 'react';\nimport s from './FormControl.module.css';\nexport const RadioInputSpan = ({\n  meta\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.error && meta.submitFailed ? /*#__PURE__*/React.createElement(\"span\", {\n    className: s.radioInputSpan + ' ' + s.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 49\n    }\n  }, meta.error) : false);\n};\n\n/*#__PURE__*/\nReact.createElement(\"div\", {\n  className: s.answerItemBox,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  for: forLabel,\n  className: s.answerLabel,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 34\n  }\n}, responseText), /*#__PURE__*/React.createElement(Field, {\n  name: fieldName,\n  component: \"input\",\n  type: \"radio\",\n  value: fieldValue,\n  id: fieldId,\n  validate: [requireFormRadio],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}));\nexport const RadioInput = ({\n  input,\n  meta,\n  ...props\n}) => {\n  console.log(props, input, meta);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, props, input, meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }\n  })), \" \", props.text));\n};","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/rest/src/component/common/FormControl.jsx"],"names":["React","s","RadioInputSpan","meta","error","submitFailed","radioInputSpan","answerItemBox","forLabel","answerLabel","responseText","fieldName","fieldValue","fieldId","requireFormRadio","RadioInput","input","props","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,0BAAd;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACvC,sBAAQ,0CAAGA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,YAAnB,gBAAkC;AAAM,IAAA,SAAS,EAAEJ,CAAC,CAACK,cAAF,GAAmB,GAAnB,GAAyBL,CAAC,CAACG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDD,IAAI,CAACC,KAAzD,CAAlC,GAA2G,KAA9G,CAAR;AAEF,CAHM;;AAKP;AAAA;AAAK,EAAA,SAAS,EAAEH,CAAC,CAACM,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAiC;AAAO,EAAA,GAAG,EAAEC,QAAZ;AAAsB,EAAA,SAAS,EAAEP,CAAC,CAACQ,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiDC,YAAjD,CAAjC,eACQ,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAEC,SAAb;AAAwB,EAAA,SAAS,EAAC,OAAlC;AAA0C,EAAA,IAAI,EAAC,OAA/C;AAAuD,EAAA,KAAK,EAAEC,UAA9D;AAA0E,EAAA,EAAE,EAAEC,OAA9E;AAAuF,EAAA,QAAQ,EAAE,CAACC,gBAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADR;AAIA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASb,EAAAA,IAAT;AAAe,KAAGc;AAAlB,CAAD,KAA+B;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBD,KAAnB,EAA0Bb,IAA1B;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,+CAAWc,KAAX,EAAsBD,KAAtB,EAAiCb,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL,OAAgDc,KAAK,CAACG,IAAtD,CADG,CAAP;AAGH,CANM","sourcesContent":["import React from 'react';\nimport s from './FormControl.module.css';\n\nexport const RadioInputSpan = ({meta}) => {\n   return  <>{meta.error && meta.submitFailed ? <span className={s.radioInputSpan + ' ' + s.error}>{meta.error}</span> : false}</>\n\n}\n\n<div className={s.answerItemBox}><label for={forLabel} className={s.answerLabel}>{responseText}\n</label><Field name={fieldName} component='input' type='radio' value={fieldValue} id={fieldId} validate={[requireFormRadio]}/></div>   \n\n\nexport const RadioInput = ({ input, meta, ...props }) => {\n    console.log(props, input, meta);\n\n    return <div>\n        <div><input {...props} {...input} {...meta} /> {props.text}</div>\n    </div>\n}\n"]},"metadata":{},"sourceType":"module"}