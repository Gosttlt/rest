{"ast":null,"code":"const SET_PRICE = 'SET_PRICE';\nconst initialState = {\n  finalPrice: 0\n};\n\nconst calculationReducer = (state = initialState, action) => {\n  switch (action) {\n    case SET_PRICE:\n      return { ...state,\n        finalPrice: action.price\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setPriceSucces = price => ({\n  type: SET_PRICE,\n  price\n});\n\nexport const priceCalculation = ({\n  city,\n  cover,\n  bath\n}) => dispatch => {\n  const totalPrice = 0;\n\n  if (cover == 'yes') {\n    totalPrice += 500;\n  }\n\n  if (bath == '75') {\n    totalPrice += 2590;\n  }\n\n  if (bath == '150') {\n    totalPrice += 2790;\n  }\n\n  if (bath == '170') {\n    totalPrice += 2990;\n  }\n\n  dispatch(setPriceSucces(totalPrice));\n};\nexport default calculationReducer;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/tursunkuloff/src/redux/calculationReducer.js"],"names":["SET_PRICE","initialState","finalPrice","calculationReducer","state","action","price","setPriceSucces","type","priceCalculation","city","cover","bath","dispatch","totalPrice"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC;AADM,CAArB;;AAIA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACzD,UAAQA,MAAR;AACI,SAAKL,SAAL;AACA,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,UAAU,EAACG,MAAM,CAACC;AAFf,OAAP;;AAKA;AACI,aAAOF,KAAP;AARR;AAWH,CAZD;;AAcA,MAAMG,cAAc,GAAID,KAAD,KAAY;AAACE,EAAAA,IAAI,EAAER,SAAP;AAAkBM,EAAAA;AAAlB,CAAZ,CAAvB;;AAEA,OAAO,MAAMG,gBAAgB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA0BC,QAAD,IAAc;AACnE,QAAMC,UAAU,GAAC,CAAjB;;AACA,MAAGH,KAAK,IAAI,KAAZ,EAAmB;AACfG,IAAAA,UAAU,IAAG,GAAb;AACH;;AACD,MAAGF,IAAI,IAAE,IAAT,EAAe;AACXE,IAAAA,UAAU,IAAE,IAAZ;AACH;;AACD,MAAGF,IAAI,IAAE,KAAT,EAAgB;AACZE,IAAAA,UAAU,IAAE,IAAZ;AACH;;AACD,MAAGF,IAAI,IAAE,KAAT,EAAgB;AACZE,IAAAA,UAAU,IAAE,IAAZ;AACH;;AACDD,EAAAA,QAAQ,CAACN,cAAc,CAACO,UAAD,CAAf,CAAR;AACH,CAfM;AAkBP,eAAeX,kBAAf","sourcesContent":["const SET_PRICE = 'SET_PRICE';\n\nconst initialState = {\n    finalPrice:0,\n}\n\nconst calculationReducer = (state = initialState, action) => {\n    switch (action) {\n        case SET_PRICE: \n        return { \n            ...state,\n            finalPrice:action.price\n        }\n\n        default:\n            return state;\n    }\n   \n}\n\nconst setPriceSucces = (price) => ({type: SET_PRICE, price})\n\nexport const priceCalculation = ({city, cover, bath}) => (dispatch) => {\n    const totalPrice=0;\n    if(cover == 'yes') {\n        totalPrice +=500;\n    }\n    if(bath=='75') {\n        totalPrice+=2590\n    }\n    if(bath=='150') {\n        totalPrice+=2790\n    }\n    if(bath=='170') {\n        totalPrice+=2990\n    }\n    dispatch(setPriceSucces(totalPrice))\n}\n\n\nexport default calculationReducer"]},"metadata":{},"sourceType":"module"}