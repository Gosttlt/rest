{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/rest/src/component/Cost/Cost.jsx\";\nimport React from 'react';\nimport s from './cost.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport Question from './Question';\nimport { RadioInput, RadioInputSpan } from '../common/FormControl';\nimport { requireFormRadio } from '../utils/validators/validators';\nimport { useState } from 'react';\n\nconst Cost = ({\n  finalPrice,\n  setPriceSucces\n}) => {\n  const CostReduxForm = reduxForm({\n    form: 'calculationPrive'\n  })(CostForm);\n\n  const onSubmit = ({\n    coverQuest,\n    sizeQuest,\n    cityQuest\n  }) => {\n    const [totalPrice, setTotalPrice] = useState(0);\n\n    if (coverQuest == \"yes\") {\n      setTotalPrice(totalPrice += 500);\n    }\n\n    if (sizeQuest == \"75\") {\n      totalPrice += 2590;\n    }\n\n    if (sizeQuest == \"150\") {\n      totalPrice += 2790;\n    }\n\n    if (sizeQuest == \"170\") {\n      totalPrice += 2990;\n    }\n\n    if (cityQuest == \"no\") {\n      totalPrice += ' Руб. + выезд за каждые 10 км от города + 100';\n    }\n\n    setPriceSucces(totalPrice);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CostReduxForm, {\n    onSubmit: onSubmit,\n    finalPrice: finalPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst CostForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    question: \"\\u0412\\u044B \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0435\\u0441\\u044C \\u0432 \\u0422\\u043E\\u043B\\u044C\\u044F\\u0442\\u0442\\u0438?\",\n    correctionQuest: \"(\\u041F\\u043E\\u0434\\u0441\\u0442\\u0435\\u043F\\u043A\\u0438 \\u0438 \\u041F\\u0440\\u0438\\u043C\\u043E\\u0440\\u0441\\u043A\\u0438\\u0439 \\u0441\\u0447\\u0438\\u0442\\u0430\\u044E\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \\u0422\\u043E\\u043B\\u044C\\u044F\\u0442\\u0442\\u0438)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"cityQuest\",\n    type: \"radio\",\n    value: \"yes\",\n    responseText: \"\\u0414\\u0430\",\n    for: \"answer_city_yes\",\n    id: \"answer_city_yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"cityQuest\",\n    type: \"radio\",\n    value: \"no\",\n    responseText: \"\\u041D\\u0435\\u0442\",\n    for: \"answer_city_no\",\n    id: \"answer_city_no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInputSpan,\n    name: \"cityQuest\",\n    validate: [requireFormRadio],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Question, {\n    question: \"\\u0411\\u044B\\u043B\\u0430 \\u043B\\u0438 \\u0432\\u0430\\u043D\\u043D\\u0430 \\u0440\\u0430\\u043D\\u0435\\u0435 \\u0447\\u0435\\u043C-\\u0442\\u043E \\u043F\\u043E\\u043A\\u0440\\u044B\\u0442\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"coverQuest\",\n    type: \"radio\",\n    value: \"yes\",\n    responseText: \"\\u0414\\u0430\",\n    for: \"answer_cover_yes\",\n    id: \"answer_cover_yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"coverQuest\",\n    type: \"radio\",\n    value: \"no\",\n    responseText: \"\\u041D\\u0435\\u0442\",\n    for: \"answer_cover_no\",\n    id: \"answer_cover_no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInputSpan,\n    name: \"coverQuest\",\n    validate: [requireFormRadio],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Question, {\n    question: \"\\u0411\\u044B\\u043B\\u0430 \\u043B\\u0438 \\u0432\\u0430\\u043D\\u043D\\u0430 \\u0440\\u0430\\u043D\\u0435\\u0435 \\u0447\\u0435\\u043C-\\u0442\\u043E \\u043F\\u043E\\u043A\\u0440\\u044B\\u0442\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"sizeQuest\",\n    type: \"radio\",\n    value: \"75\",\n    responseText: \"75x75\\u0441\\u043C\",\n    for: \"bath75\",\n    id: \"bath75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"sizeQuest\",\n    type: \"radio\",\n    value: \"150\",\n    responseText: \"150\\u0441\\u043C\",\n    for: \"bath150\",\n    id: \"bath150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInput,\n    name: \"sizeQuest\",\n    type: \"radio\",\n    value: \"170\",\n    responseText: \"170\\u0441\\u043C\",\n    for: \"bath170\",\n    id: \"bath170\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: RadioInputSpan,\n    name: \"sizeQuest\",\n    validate: [requireFormRadio],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.final_price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.buttonFinalPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"), \"\\u0418\\u0442\\u043E\\u0433: \", props.finalPrice, \" \\u0420\\u0443\\u0431.\")));\n};\n\nexport default Cost;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/rest/src/component/Cost/Cost.jsx"],"names":["React","s","Field","reduxForm","Question","RadioInput","RadioInputSpan","requireFormRadio","useState","Cost","finalPrice","setPriceSucces","CostReduxForm","form","CostForm","onSubmit","coverQuest","sizeQuest","cityQuest","totalPrice","setTotalPrice","props","handleSubmit","final_price","buttonFinalPrice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport s from './cost.module.css'\nimport { Field, reduxForm } from 'redux-form';\nimport Question from './Question';\nimport { RadioInput, RadioInputSpan} from '../common/FormControl';\nimport { requireFormRadio } from '../utils/validators/validators';\nimport { useState } from 'react';\n\nconst Cost = ({ finalPrice, setPriceSucces }) => {\n    const CostReduxForm = reduxForm({ form: 'calculationPrive' })(CostForm);\n\n    const onSubmit = ({coverQuest, sizeQuest, cityQuest}) => {\n        const [totalPrice, setTotalPrice] = useState(0)\n        if (coverQuest == \"yes\") {\n            setTotalPrice(totalPrice+= 500);\n        }\n        if (sizeQuest == \"75\") {\n            totalPrice += 2590;\n        }\n        if (sizeQuest == \"150\") {\n            totalPrice += 2790;\n        }\n        if (sizeQuest == \"170\") {\n            totalPrice += 2990;\n        }\n        if (cityQuest == \"no\") {\n            totalPrice += ' Руб. + выезд за каждые 10 км от города + 100'\n        }\n        setPriceSucces(totalPrice);\n\n\n    }\n    return (\n        <div>\n            <CostReduxForm onSubmit={onSubmit} finalPrice={finalPrice} />\n        </div>\n\n    )\n}\n\nconst CostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n\n            <div>\n                <Question question='Вы находитесь в Тольятти?' correctionQuest='(Подстепки и Приморский считаются как Тольятти)'>\n                    <Field component={RadioInput} name='cityQuest' type='radio' value='yes' responseText='Да' for=\"answer_city_yes\" id=\"answer_city_yes\" />\n                    <Field component={RadioInput} name='cityQuest' type='radio' value='no' responseText='Нет' for=\"answer_city_no\" id=\"answer_city_no\" />\n                    <Field component={RadioInputSpan} name='cityQuest' validate={[requireFormRadio]} />\n                </Question>\n                <Question question='Была ли ванна ранее чем-то покрыта'>\n                    <Field component={RadioInput} name='coverQuest' type='radio' value='yes' responseText='Да' for=\"answer_cover_yes\" id=\"answer_cover_yes\" />\n                    <Field component={RadioInput} name='coverQuest' type='radio' value='no' responseText='Нет' for=\"answer_cover_no\" id=\"answer_cover_no\" />\n                    <Field component={RadioInputSpan} name='coverQuest' validate={[requireFormRadio]} />\n                </Question>\n                <Question question='Была ли ванна ранее чем-то покрыта'>\n                    <Field component={RadioInput} name='sizeQuest' type='radio' value='75' responseText='75x75см' for=\"bath75\" id=\"bath75\" />\n                    <Field component={RadioInput} name='sizeQuest' type='radio' value='150' responseText='150см' for=\"bath150\" id=\"bath150\" />\n                    <Field component={RadioInput} name='sizeQuest' type='radio' value='170' responseText='170см' for=\"bath170\" id=\"bath170\" />\n                    <Field component={RadioInputSpan} name='sizeQuest' validate={[requireFormRadio]} />\n                </Question>\n                <div className={s.final_price}>\n                    <button className={s.buttonFinalPrice}>Рассчитать</button>\n        Итог: {props.finalPrice} Руб.\n\n    </div>\n            </div>\n        </form>)\n}\n\n\n\n\nexport default Cost;"]},"metadata":{},"sourceType":"module"}